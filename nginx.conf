# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;
worker_rlimit_nofile 16384;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {

     log_format main   '[$cacheidentifier] $remote_addr / $http_x_forwarded_for - $remote_user [$time_local] '
		       '"$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$upstream_cache_status" "$host" "$http_range"';

#    log_format main     ' $remote_addr / $http_x_forwarded_for - $remote_user [$time_local]'
#                        ' "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$upstream_cache_status"'
#                        ' "$upstream_connect_time" "$host" "$http_range"';

    access_log  /var/log/nginx/access.log  main;
    error_log /var/log/nginx/error.log;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    
    gzip		on;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

        # Primary monolithic cache engine

	server {
  		listen 80 reuseport;
  		resolver 172.16.1.11 172.16.1.21 ipv6=off;

  		location / {
    			# Abort any circular requests
    			if ($http_X_LanCache_Processed_By = $hostname) {
      				return 508;
    			}

    			proxy_set_header X-LanCache-Processed-By $hostname;
    			add_header X-LanCache-Processed-By $hostname,$http_X_LanCache_Processed_By;
  
    			# Cache Location
    			slice 1m;
    			proxy_cache generic;

    			proxy_ignore_headers Expires Cache-Control;
    			proxy_cache_valid 200 206 3560d;
    			proxy_set_header  Range $slice_range;

    			# Only download one copy at a time and use a large timeout so
    			# this really happens, otherwise we end up wasting bandwith
    			# getting the file multiple times.
    			proxy_cache_lock on;
    			
			# If it's taken over a minute to download a 1m file, we are probably stuck!
    			# Allow the next request to cache
    			proxy_cache_lock_age 2m;
    			
			# If it's totally broken after an hour, stick it in bypass (this shouldn't ever trigger)
    			proxy_cache_lock_timeout 1h;

    			# Allow the use of state entries
    			proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

    			# Allow caching of 200 but not 301 or 302 as our cache key may not include query params
    			# hence may not be valid for all users
    			proxy_cache_valid 301 302 0;

    			# Enable cache revalidation
    			proxy_cache_revalidate on;
    
   			# Don't cache requests marked as nocache=1
    			proxy_cache_bypass $arg_nocache;

    			# 40G max file
    			proxy_max_temp_file_size 40960m;

    			proxy_cache_key      $cacheidentifier$uri$slice_range;

    			# Battle.net Fix
    			proxy_hide_header ETag;
			
			# Upstream Configuration
	    		proxy_next_upstream error timeout http_404;
    			proxy_pass http://$host$request_uri;
    			proxy_redirect off;
    			proxy_ignore_client_abort on;

			# Upstream request headers
    			proxy_set_header Host $host;
    			proxy_set_header X-Real-IP $remote_addr;
    			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    			# Debug Headers
    			add_header X-Upstream-Status $upstream_status;
    			add_header X-Upstream-Response-Time $upstream_response_time;
   		 	add_header X-Upstream-Cache-Status $upstream_cache_status;
  		}


  		# Fix for League of Legends Updater
  		location ~ ^.+(releaselisting_.*|.version$) {
    			proxy_pass http://$host;
  		}

 	 	# Fix for GW2 manifest
  		location ^~ /latest64 {
    			proxy_cache_bypass 1;
    			proxy_no_cache 1;
   	 		proxy_pass http://$host$request_uri;
  		}

  		# Fix for WSUS authroot cab files
  		location ~* (authrootstl.cab|pinrulesstl.cab|disallowedcertstl.cab)$ {
    			proxy_cache_bypass 1;
    			proxy_no_cache 1;
    			proxy_pass http://$host$request_uri;
  		}

		# For Metrics
  		location = /server-status {
    			allow 127.0.0.1;
			deny all;
			stub_status;
			proxy_no_cache 1;
    			proxy_cache_bypass 1;
  			access_log off;
		}

   		# For Metricbeat
		location = /nginx_status {
    		        allow 127.0.0.1;
                        deny all;
                        stub_status;
                        proxy_no_cache 1;
                        proxy_cache_bypass 1;
                        access_log off;
		}

  		location = /lancache-heartbeat {
    			add_header X-LanCache-Processed-By $hostname;
    			add_header 'Access-Control-Expose-Headers' '*';
    			add_header 'Access-Control-Allow-Origin' '*';
    			return 204;
  		}
	}
}
